<launch>
  <env name="ROSCONSOLE_FORMAT" value="[${severity}] [${time}] [${node}]: ${message}"/>

  <arg name="rvizconfig" default="$(find reconcycle_description)/rviz/reconcycle_sim.rviz" />
  <arg name="robot_model" default="$(find franka_panda_description)/robots/panda_arm_hand.urdf.xacro"/>
  <arg name="robot_model_reconcycle" default="$(find reconcycle_description)/urdf/reconcycle_panda.xacro"/>
  <arg name="layout" default="hca_layout.xacro"/>
  <arg name="robot_gazebo" default="false"/>
  <arg name="robot_absent" default="true"/>
  <arg name="rviz" default="true"/>

  <param name="/use_sim_time" value="true" />

  <!-- reconcycle tables -->
  <group ns='table'>
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find reconcycle_description)/layouts/$(arg layout)"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  </group>

  <!-- qb hand to panda_1/panda_link8 -->
  <arg name="hand_model" default="$(find qb_hand_description)/urdf/qbhand.urdf.xacro"/>
  <group ns='qb_hand_1'>
    <param unless="$(arg robot_gazebo)" name="robot_description" command="$(find xacro)/xacro $(arg hand_model)"/>
    <!-- <param name="tf_prefix" value="hand_1"/> -->
    <!-- <node if="$(arg robot_absent)" name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
    <node if="$(arg robot_absent)" name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="hand_to_robot" pkg="tf" type="static_transform_publisher" args="0.0045 0.0144 0.14 3.14 3.14 0 soft_hand_adaptor root_link 100"/>
  </group> 

  <!-- tools added to rviz - under URDF  -->
  <arg name="tool_model_screwdriver" default="$(find reconcycle_description)/urdf/screwdriver.xacro" />
  <arg name="tool_model_vacuumgripper" default="$(find reconcycle_description)/urdf/vacuumgripper.xacro" />
  <arg name="tool_model_parallelgripper" default="$(find reconcycle_description)/urdf/parallelgripper.xacro" />
  <group ns="tools">
    <param unless="$(arg robot_gazebo)" name="screwdriver" command="$(find xacro)/xacro $(arg tool_model_screwdriver)" />
    <param unless="$(arg robot_gazebo)" name="vacuumgripper" command="$(find xacro)/xacro $(arg tool_model_vacuumgripper)" />
    <param unless="$(arg robot_gazebo)" name="parallelgripper" command="$(find xacro)/xacro $(arg tool_model_parallelgripper)" />
    <node name="screwdriver" pkg="reconcycle_description" type="tool_changer_rviz.py" args="--tool 'screwdriver' --frame 'tool_frame_1' --Tmatrix 0 0 0 0 0 0" output="screen" />
    <node name="vacuumgripper" pkg="reconcycle_description" type="tool_changer_rviz.py" args="--tool 'vacuumgripper' --frame 'tool_frame_2' --Tmatrix 0 0 0 0 0 0" output="screen" />
    <node name="parallelgripper" pkg="reconcycle_description" type="tool_changer_rviz.py" args="--tool 'parallelgripper' --frame 'tool_frame_3' --Tmatrix 0 0 0 0 0 0" output="screen" />
  </group>

  <!-- TF marker frame changer service, attaching visualized object to qb_hand -->
  <group ns="object_to_qbhand_frame_changer">
    <node name="visualized_object_service" pkg="reconcycle_description" type="visualized_object_service.py" output="screen" />
  </group>

 <!-- tc_robot_tool --> 
  <arg name="tc_robot_simulation" default="$(find reconcycle_description)/urdf/tc_robot_sim.xacro" />
  <group ns="toolholder" >
    <param unless="$(arg robot_gazebo)" name="tool_holder_on_panda1" command="$(find xacro)/xacro $(arg tc_robot_simulation) tc_id:=tc_robot_panda1" />
    <param unless="$(arg robot_gazebo)" name="tool_holder_on_panda2" command="$(find xacro)/xacro $(arg tc_robot_simulation) tc_id:=tc_robot_panda2" />
    <node name="tc_to_panda_1" pkg="tf" type="static_transform_publisher" args="0 0 0 -0.785 3.14159 0 panda_1/panda_link8 tc_robot_panda1 100" />
    <node name="tc_to_panda_2" pkg="tf" type="static_transform_publisher" args="0 0 0 -0.785 3.14159 0 panda_2/panda_link8 tc_robot_panda2 100"/>
  </group>

  <!-- soft hand adaptor with TC -->
  <arg name="soft_hand_adaptor_TC" default="$(find reconcycle_description)/urdf/Soft_hand_adaptor.xacro" />
  <group ns="adaptor">
    <param unless="$(arg robot_gazebo)" name="soft_hand_adaptor" command="$(find xacro)/xacro $(arg soft_hand_adaptor_TC)" />
    <node name="soft_hand_adaptor" pkg="tf" type="static_transform_publisher" args="-0.1897 -0.00434 -0.09 1.57 0 1.57 tc_robot_panda1 soft_hand_adaptor 100"/>
  </group>

  <!-- vise movable parts/tools (args: slider:=1 /plate:=1 /rotation:=1) -->
  <arg name="vise_movable_tools" default="$(find reconcycle_description)/urdf/vise_movables_sim.xacro" />
  <group ns="vise_movables">
    <param name="vise_slider" command="$(find xacro)/xacro --inorder $(arg vise_movable_tools) slider:=1" />
    <param name="vise_plate" command="$(find xacro)/xacro --inorder $(arg vise_movable_tools) plate:=1" />
    <param name="vise_rotation" command="$(find xacro)/xacro --inorder $(arg vise_movable_tools) rotation:=1" />
    <node name="vise_slider_node" pkg="reconcycle_description" type="tool_changer_rviz.py" args="--tool 'vise_slider' --frame 'vise_base' --Tmatrix -0.26 0.0015 0.024 0 0 0" output="screen" />
    <node name="vise_plate_node" pkg="reconcycle_description" type="tool_changer_rviz.py" args="--tool 'vise_plate' --frame 'vise_base' --Tmatrix 0.05 0.05 0.019 0 0 0" output="screen" />
    <node name="vise_rotation_node" pkg="reconcycle_description" type="tool_changer_rviz.py" args="--tool 'vise_rotation' --frame 'vise_base' --Tmatrix -0.125 0.0788 0.1385 0 0 0" output="screen" />
  </group>

  <!-- robot_description is loaded to parameter server by the launch file for simulation/real controllers -->
  <group ns='panda_1'>
    <node name="panda_1_to_table" pkg="tf" type="static_transform_publisher" args="0 0 0.02 0 0 0 table_rob_1 panda_1/world 100"/>
  </group>

  <group ns='panda_2'>
    <node name="panda_2_to_table" pkg="tf" type="static_transform_publisher" args="0 0 0.02 0 0 0 table_rob_2 panda_2/world 100"/>
  </group>

  <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

</launch>