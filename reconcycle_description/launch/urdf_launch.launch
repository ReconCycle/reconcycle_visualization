 <launch>

  <arg name="sim" default="false" />

 
  
  <include file="$(find test_rospkg)/launch/load_part.launch">

    <arg name="tf_prefix" value="cutter"/>
    <arg name="urdf_name" value="cutter"/>
    <arg name="show_joint_gui" value="true"/>
    
  </include>


  <include file="$(find test_rospkg)/launch/load_part.launch">

    <arg name="tf_prefix" value="robot_desk1"/>
    <arg name="urdf_name" value="robot_desk"/>
    
  </include>
  
  <include file="$(find test_rospkg)/launch/load_part.launch">

    <arg name="tf_prefix" value="clamp_desk"/>
    <arg name="urdf_name" value="vise_desk"/>
    <arg name="show_joint_gui" value="true"/>
    
  </include>

  <include file="$(find test_rospkg)/launch/load_part.launch">

    <arg name="tf_prefix" value="camera_desk"/>
    <arg name="urdf_name" value="camera_desk"/>
    
  </include>


  <include file="$(find test_rospkg)/launch/load_part.launch">

    <arg name="tf_prefix" value="robot_desk2"/>
    <arg name="urdf_name" value="robot_desk"/>
    
  </include>

  <include file="$(find test_rospkg)/launch/load_part.launch">

    <arg name="tf_prefix" value="claw_mount"/>
    <arg name="urdf_name" value="claw_mount"/>
    
  </include>





  <arg name="robot_model" default="$(find franka_description)/robots/panda_arm.urdf.xacro"/>

  <group ns="robot1">
    <param name="tf_prefix" value="robot1" />
    
    <param name="robot_description" command="xacro --inorder '$(arg robot_model)'" />
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
 
    <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />

  </group>

  <group ns="robot2">
    <param name="tf_prefix" value="robot2" />
    
    <param name="robot_description" command="xacro --inorder '$(arg robot_model)'" />
    
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
 
    <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />

  </group>
  <group ns="gripper1">
    <param name="tf_prefix" value="gripper1" />
    <include file="$(find qb_move_description)/launch/display.launch">

      <arg name="use_rviz" value="false"/>
     
      
      <arg name="device_type" value="qbsoftclaw"/>
      
    </include>
  </group>



  <node name="map_pub" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map cutter/base 100"/>

  <node name="cutter_to_storage" pkg="tf" type="static_transform_publisher" args="0.6 0 0 3.14 0 0 cutter/base robot_desk1/base 100"/>

  <node name="robot_clamp" pkg="tf" type="static_transform_publisher" args="0.6 0 0 0 0 0 robot_desk1/base clamp_desk/base 100"/>

  <node name="clamp_camera" pkg="tf" type="static_transform_publisher" args="0.6 0 0 3.14  0 0 clamp_desk/base camera_desk/base 100"/>

  <node name="camera_robot2" pkg="tf" type="static_transform_publisher" args="-0.6 0 0 0 0 0 camera_desk/base robot_desk2/base 100"/>

  <node name="robot1_desk1" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 robot_desk1/robo robot1/panda_link0 100"/>

  <node name="robot1_gripper1" pkg="tf" type="static_transform_publisher" args="0 0 0 -1.57 0 0 robot1/panda_link8 claw_mount/base 100"/>
  <node name="robot1_gripper2" pkg="tf" type="static_transform_publisher" args="0 0 -0.08 -1.57 0 0 robot1/panda_link8 world 100"/>
  
  <node name="robot2_desk2" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 robot_desk2/robo robot2/panda_link0 100"/>



  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find test_rospkg)/rviz/vis.rviz" />


</launch> 